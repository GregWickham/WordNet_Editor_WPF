//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 
namespace SimpleNLG {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml", IsNullable=false)]
    public partial class NLGSpec {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Recording", typeof(RecordSet))]
        [System.Xml.Serialization.XmlElementAttribute("Request", typeof(RequestType))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class RecordSet {
        
        private DocumentRealisation[] recordField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Record")]
        public DocumentRealisation[] Record {
            get {
                return this.recordField;
            }
            set {
                this.recordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class DocumentRealisation {
        
        private DocumentElement documentField;
        
        private string realisationField;
        
        private string nameField;
        
        /// <remarks/>
        public DocumentElement Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
            }
        }
        
        /// <remarks/>
        public string Realisation {
            get {
                return this.realisationField;
            }
            set {
                this.realisationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class DocumentElement : NLGElement {
        
        private NLGElement[] childField;
        
        private documentCategory catField;
        
        private bool catFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("child")]
        public NLGElement[] child {
            get {
                return this.childField;
            }
            set {
                this.childField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public documentCategory cat {
            get {
                return this.catField;
            }
            set {
                this.catField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool catSpecified {
            get {
                return this.catFieldSpecified;
            }
            set {
                this.catFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WordElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PhraseElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PPPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdvPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NPPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VPPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CoordinatedPhraseElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocumentElement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public abstract partial class NLGElement {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class RequestType {
        
        private DocumentElement documentField;
        
        /// <remarks/>
        public DocumentElement Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class StringElement : NLGElement {
        
        private string valField;
        
        /// <remarks/>
        public string val {
            get {
                return this.valField;
            }
            set {
                this.valField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class WordElement : NLGElement {
        
        private string baseField;
        
        private lexicalCategory catField;
        
        private bool catFieldSpecified;
        
        private string idField;
        
        private bool eXPLETIVE_SUBJECTField;
        
        private bool eXPLETIVE_SUBJECTFieldSpecified;
        
        private bool pROPERField;
        
        private bool pROPERFieldSpecified;
        
        private inflection varField;
        
        private bool varFieldSpecified;
        
        private bool cannedField;
        
        private bool cannedFieldSpecified;
        
        /// <remarks/>
        public string @base {
            get {
                return this.baseField;
            }
            set {
                this.baseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public lexicalCategory cat {
            get {
                return this.catField;
            }
            set {
                this.catField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool catSpecified {
            get {
                return this.catFieldSpecified;
            }
            set {
                this.catFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EXPLETIVE_SUBJECT {
            get {
                return this.eXPLETIVE_SUBJECTField;
            }
            set {
                this.eXPLETIVE_SUBJECTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EXPLETIVE_SUBJECTSpecified {
            get {
                return this.eXPLETIVE_SUBJECTFieldSpecified;
            }
            set {
                this.eXPLETIVE_SUBJECTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PROPER {
            get {
                return this.pROPERField;
            }
            set {
                this.pROPERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PROPERSpecified {
            get {
                return this.pROPERFieldSpecified;
            }
            set {
                this.pROPERFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public inflection var {
            get {
                return this.varField;
            }
            set {
                this.varField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool varSpecified {
            get {
                return this.varFieldSpecified;
            }
            set {
                this.varFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool canned {
            get {
                return this.cannedField;
            }
            set {
                this.cannedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cannedSpecified {
            get {
                return this.cannedFieldSpecified;
            }
            set {
                this.cannedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum lexicalCategory {
        
        /// <remarks/>
        ANY,
        
        /// <remarks/>
        SYMBOL,
        
        /// <remarks/>
        NOUN,
        
        /// <remarks/>
        ADJECTIVE,
        
        /// <remarks/>
        ADVERB,
        
        /// <remarks/>
        VERB,
        
        /// <remarks/>
        DETERMINER,
        
        /// <remarks/>
        PRONOUN,
        
        /// <remarks/>
        CONJUNCTION,
        
        /// <remarks/>
        PREPOSITION,
        
        /// <remarks/>
        COMPLEMENTISER,
        
        /// <remarks/>
        MODAL,
        
        /// <remarks/>
        AUXILIARY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum inflection {
        
        /// <remarks/>
        GRECO_LATIN_REGULAR,
        
        /// <remarks/>
        IRREGULAR,
        
        /// <remarks/>
        REGULAR,
        
        /// <remarks/>
        REGULAR_DOUBLE,
        
        /// <remarks/>
        UNCOUNT,
        
        /// <remarks/>
        INVARIANT,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PPPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdvPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NPPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VPPhraseSpec))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SPhraseSpec))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public abstract partial class PhraseElement : NLGElement {
        
        private NLGElement[] frontModField;
        
        private NLGElement[] preModField;
        
        private NLGElement[] complField;
        
        private NLGElement[] postModField;
        
        private WordElement headField;
        
        private phraseCategory catField;
        
        private bool catFieldSpecified;
        
        private discourseFunction discourseFunctionField;
        
        private bool discourseFunctionFieldSpecified;
        
        private bool appositiveField;
        
        private bool appositiveFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("frontMod")]
        public NLGElement[] frontMod {
            get {
                return this.frontModField;
            }
            set {
                this.frontModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("preMod")]
        public NLGElement[] preMod {
            get {
                return this.preModField;
            }
            set {
                this.preModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("compl")]
        public NLGElement[] compl {
            get {
                return this.complField;
            }
            set {
                this.complField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("postMod")]
        public NLGElement[] postMod {
            get {
                return this.postModField;
            }
            set {
                this.postModField = value;
            }
        }
        
        /// <remarks/>
        public WordElement head {
            get {
                return this.headField;
            }
            set {
                this.headField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public phraseCategory cat {
            get {
                return this.catField;
            }
            set {
                this.catField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool catSpecified {
            get {
                return this.catFieldSpecified;
            }
            set {
                this.catFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public discourseFunction discourseFunction {
            get {
                return this.discourseFunctionField;
            }
            set {
                this.discourseFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool discourseFunctionSpecified {
            get {
                return this.discourseFunctionFieldSpecified;
            }
            set {
                this.discourseFunctionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool appositive {
            get {
                return this.appositiveField;
            }
            set {
                this.appositiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool appositiveSpecified {
            get {
                return this.appositiveFieldSpecified;
            }
            set {
                this.appositiveFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum phraseCategory {
        
        /// <remarks/>
        CLAUSE,
        
        /// <remarks/>
        ADJECTIVE_PHRASE,
        
        /// <remarks/>
        ADVERB_PHRASE,
        
        /// <remarks/>
        NOUN_PHRASE,
        
        /// <remarks/>
        PREPOSITIONAL_PHRASE,
        
        /// <remarks/>
        VERB_PHRASE,
        
        /// <remarks/>
        CANNED_TEXT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum discourseFunction {
        
        /// <remarks/>
        AUXILIARY,
        
        /// <remarks/>
        COMPLEMENT,
        
        /// <remarks/>
        CONJUNCTION,
        
        /// <remarks/>
        CUE_PHRASE,
        
        /// <remarks/>
        FRONT_MODIFIER,
        
        /// <remarks/>
        HEAD,
        
        /// <remarks/>
        INDIRECT_OBJECT,
        
        /// <remarks/>
        OBJECT,
        
        /// <remarks/>
        PRE_MODIFIER,
        
        /// <remarks/>
        POST_MODIFIER,
        
        /// <remarks/>
        SPECIFIER,
        
        /// <remarks/>
        SUBJECT,
        
        /// <remarks/>
        VERB_PHRASE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class PPPhraseSpec : PhraseElement {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class AdvPhraseSpec : PhraseElement {
        
        private bool iS_COMPARATIVEField;
        
        private bool iS_COMPARATIVEFieldSpecified;
        
        private bool iS_SUPERLATIVEField;
        
        private bool iS_SUPERLATIVEFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IS_COMPARATIVE {
            get {
                return this.iS_COMPARATIVEField;
            }
            set {
                this.iS_COMPARATIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IS_COMPARATIVESpecified {
            get {
                return this.iS_COMPARATIVEFieldSpecified;
            }
            set {
                this.iS_COMPARATIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IS_SUPERLATIVE {
            get {
                return this.iS_SUPERLATIVEField;
            }
            set {
                this.iS_SUPERLATIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IS_SUPERLATIVESpecified {
            get {
                return this.iS_SUPERLATIVEFieldSpecified;
            }
            set {
                this.iS_SUPERLATIVEFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class AdjPhraseSpec : PhraseElement {
        
        private bool iS_COMPARATIVEField;
        
        private bool iS_COMPARATIVEFieldSpecified;
        
        private bool iS_SUPERLATIVEField;
        
        private bool iS_SUPERLATIVEFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IS_COMPARATIVE {
            get {
                return this.iS_COMPARATIVEField;
            }
            set {
                this.iS_COMPARATIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IS_COMPARATIVESpecified {
            get {
                return this.iS_COMPARATIVEFieldSpecified;
            }
            set {
                this.iS_COMPARATIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IS_SUPERLATIVE {
            get {
                return this.iS_SUPERLATIVEField;
            }
            set {
                this.iS_SUPERLATIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IS_SUPERLATIVESpecified {
            get {
                return this.iS_SUPERLATIVEFieldSpecified;
            }
            set {
                this.iS_SUPERLATIVEFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class NPPhraseSpec : PhraseElement {
        
        private NLGElement specField;
        
        private bool aDJECTIVE_ORDERINGField;
        
        private bool aDJECTIVE_ORDERINGFieldSpecified;
        
        private bool eLIDEDField;
        
        private bool eLIDEDFieldSpecified;
        
        private numberAgreement nUMBERField;
        
        private bool nUMBERFieldSpecified;
        
        private gender gENDERField;
        
        private bool gENDERFieldSpecified;
        
        private person pERSONField;
        
        private bool pERSONFieldSpecified;
        
        private bool pOSSESSIVEField;
        
        private bool pOSSESSIVEFieldSpecified;
        
        private bool pRONOMINALField;
        
        private bool pRONOMINALFieldSpecified;
        
        /// <remarks/>
        public NLGElement spec {
            get {
                return this.specField;
            }
            set {
                this.specField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ADJECTIVE_ORDERING {
            get {
                return this.aDJECTIVE_ORDERINGField;
            }
            set {
                this.aDJECTIVE_ORDERINGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ADJECTIVE_ORDERINGSpecified {
            get {
                return this.aDJECTIVE_ORDERINGFieldSpecified;
            }
            set {
                this.aDJECTIVE_ORDERINGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ELIDED {
            get {
                return this.eLIDEDField;
            }
            set {
                this.eLIDEDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ELIDEDSpecified {
            get {
                return this.eLIDEDFieldSpecified;
            }
            set {
                this.eLIDEDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public numberAgreement NUMBER {
            get {
                return this.nUMBERField;
            }
            set {
                this.nUMBERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NUMBERSpecified {
            get {
                return this.nUMBERFieldSpecified;
            }
            set {
                this.nUMBERFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public gender GENDER {
            get {
                return this.gENDERField;
            }
            set {
                this.gENDERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GENDERSpecified {
            get {
                return this.gENDERFieldSpecified;
            }
            set {
                this.gENDERFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public person PERSON {
            get {
                return this.pERSONField;
            }
            set {
                this.pERSONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PERSONSpecified {
            get {
                return this.pERSONFieldSpecified;
            }
            set {
                this.pERSONFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool POSSESSIVE {
            get {
                return this.pOSSESSIVEField;
            }
            set {
                this.pOSSESSIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool POSSESSIVESpecified {
            get {
                return this.pOSSESSIVEFieldSpecified;
            }
            set {
                this.pOSSESSIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PRONOMINAL {
            get {
                return this.pRONOMINALField;
            }
            set {
                this.pRONOMINALField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PRONOMINALSpecified {
            get {
                return this.pRONOMINALFieldSpecified;
            }
            set {
                this.pRONOMINALFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum numberAgreement {
        
        /// <remarks/>
        BOTH,
        
        /// <remarks/>
        PLURAL,
        
        /// <remarks/>
        SINGULAR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum gender {
        
        /// <remarks/>
        MASCULINE,
        
        /// <remarks/>
        FEMININE,
        
        /// <remarks/>
        NEUTER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum person {
        
        /// <remarks/>
        FIRST,
        
        /// <remarks/>
        SECOND,
        
        /// <remarks/>
        THIRD,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class VPPhraseSpec : PhraseElement {
        
        private bool aGGREGATE_AUXILIARYField;
        
        private bool aGGREGATE_AUXILIARYFieldSpecified;
        
        private form fORMField;
        
        private bool fORMFieldSpecified;
        
        private string mODALField;
        
        private bool nEGATEDField;
        
        private bool nEGATEDFieldSpecified;
        
        private bool pASSIVEField;
        
        private bool pASSIVEFieldSpecified;
        
        private bool pERFECTField;
        
        private bool pERFECTFieldSpecified;
        
        private person pERSONField;
        
        private bool pERSONFieldSpecified;
        
        private bool pROGRESSIVEField;
        
        private bool pROGRESSIVEFieldSpecified;
        
        private bool sUPPRESS_GENITIVE_IN_GERUNDField;
        
        private bool sUPPRESS_GENITIVE_IN_GERUNDFieldSpecified;
        
        private bool sUPRESSED_COMPLEMENTISERField;
        
        private bool sUPRESSED_COMPLEMENTISERFieldSpecified;
        
        private tense tENSEField;
        
        private bool tENSEFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool AGGREGATE_AUXILIARY {
            get {
                return this.aGGREGATE_AUXILIARYField;
            }
            set {
                this.aGGREGATE_AUXILIARYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AGGREGATE_AUXILIARYSpecified {
            get {
                return this.aGGREGATE_AUXILIARYFieldSpecified;
            }
            set {
                this.aGGREGATE_AUXILIARYFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public form FORM {
            get {
                return this.fORMField;
            }
            set {
                this.fORMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FORMSpecified {
            get {
                return this.fORMFieldSpecified;
            }
            set {
                this.fORMFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MODAL {
            get {
                return this.mODALField;
            }
            set {
                this.mODALField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool NEGATED {
            get {
                return this.nEGATEDField;
            }
            set {
                this.nEGATEDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NEGATEDSpecified {
            get {
                return this.nEGATEDFieldSpecified;
            }
            set {
                this.nEGATEDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PASSIVE {
            get {
                return this.pASSIVEField;
            }
            set {
                this.pASSIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PASSIVESpecified {
            get {
                return this.pASSIVEFieldSpecified;
            }
            set {
                this.pASSIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PERFECT {
            get {
                return this.pERFECTField;
            }
            set {
                this.pERFECTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PERFECTSpecified {
            get {
                return this.pERFECTFieldSpecified;
            }
            set {
                this.pERFECTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public person PERSON {
            get {
                return this.pERSONField;
            }
            set {
                this.pERSONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PERSONSpecified {
            get {
                return this.pERSONFieldSpecified;
            }
            set {
                this.pERSONFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PROGRESSIVE {
            get {
                return this.pROGRESSIVEField;
            }
            set {
                this.pROGRESSIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PROGRESSIVESpecified {
            get {
                return this.pROGRESSIVEFieldSpecified;
            }
            set {
                this.pROGRESSIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SUPPRESS_GENITIVE_IN_GERUND {
            get {
                return this.sUPPRESS_GENITIVE_IN_GERUNDField;
            }
            set {
                this.sUPPRESS_GENITIVE_IN_GERUNDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SUPPRESS_GENITIVE_IN_GERUNDSpecified {
            get {
                return this.sUPPRESS_GENITIVE_IN_GERUNDFieldSpecified;
            }
            set {
                this.sUPPRESS_GENITIVE_IN_GERUNDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SUPRESSED_COMPLEMENTISER {
            get {
                return this.sUPRESSED_COMPLEMENTISERField;
            }
            set {
                this.sUPRESSED_COMPLEMENTISERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SUPRESSED_COMPLEMENTISERSpecified {
            get {
                return this.sUPRESSED_COMPLEMENTISERFieldSpecified;
            }
            set {
                this.sUPRESSED_COMPLEMENTISERFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public tense TENSE {
            get {
                return this.tENSEField;
            }
            set {
                this.tENSEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TENSESpecified {
            get {
                return this.tENSEFieldSpecified;
            }
            set {
                this.tENSEFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum form {
        
        /// <remarks/>
        BARE_INFINITIVE,
        
        /// <remarks/>
        GERUND,
        
        /// <remarks/>
        IMPERATIVE,
        
        /// <remarks/>
        INFINITIVE,
        
        /// <remarks/>
        NORMAL,
        
        /// <remarks/>
        PAST_PARTICIPLE,
        
        /// <remarks/>
        PRESENT_PARTICIPLE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum tense {
        
        /// <remarks/>
        FUTURE,
        
        /// <remarks/>
        PAST,
        
        /// <remarks/>
        PRESENT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class SPhraseSpec : PhraseElement {
        
        private NLGElement cuePhraseField;
        
        private NLGElement[] subjField;
        
        private NLGElement vpField;
        
        private bool aGGREGATE_AUXILIARYField;
        
        private bool aGGREGATE_AUXILIARYFieldSpecified;
        
        private clauseStatus cLAUSE_STATUSField;
        
        private bool cLAUSE_STATUSFieldSpecified;
        
        private string cOMPLEMENTISERField;
        
        private form fORMField;
        
        private bool fORMFieldSpecified;
        
        private interrogativeType iNTERROGATIVE_TYPEField;
        
        private bool iNTERROGATIVE_TYPEFieldSpecified;
        
        private string mODALField;
        
        private bool nEGATEDField;
        
        private bool nEGATEDFieldSpecified;
        
        private bool pASSIVEField;
        
        private bool pASSIVEFieldSpecified;
        
        private bool pERFECTField;
        
        private bool pERFECTFieldSpecified;
        
        private person pERSONField;
        
        private bool pERSONFieldSpecified;
        
        private bool pROGRESSIVEField;
        
        private bool pROGRESSIVEFieldSpecified;
        
        private bool sUPPRESS_GENITIVE_IN_GERUNDField;
        
        private bool sUPPRESS_GENITIVE_IN_GERUNDFieldSpecified;
        
        private bool sUPRESSED_COMPLEMENTISERField;
        
        private bool sUPRESSED_COMPLEMENTISERFieldSpecified;
        
        private tense tENSEField;
        
        private bool tENSEFieldSpecified;
        
        /// <remarks/>
        public NLGElement cuePhrase {
            get {
                return this.cuePhraseField;
            }
            set {
                this.cuePhraseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subj")]
        public NLGElement[] subj {
            get {
                return this.subjField;
            }
            set {
                this.subjField = value;
            }
        }
        
        /// <remarks/>
        public NLGElement vp {
            get {
                return this.vpField;
            }
            set {
                this.vpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool AGGREGATE_AUXILIARY {
            get {
                return this.aGGREGATE_AUXILIARYField;
            }
            set {
                this.aGGREGATE_AUXILIARYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AGGREGATE_AUXILIARYSpecified {
            get {
                return this.aGGREGATE_AUXILIARYFieldSpecified;
            }
            set {
                this.aGGREGATE_AUXILIARYFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public clauseStatus CLAUSE_STATUS {
            get {
                return this.cLAUSE_STATUSField;
            }
            set {
                this.cLAUSE_STATUSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CLAUSE_STATUSSpecified {
            get {
                return this.cLAUSE_STATUSFieldSpecified;
            }
            set {
                this.cLAUSE_STATUSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string COMPLEMENTISER {
            get {
                return this.cOMPLEMENTISERField;
            }
            set {
                this.cOMPLEMENTISERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public form FORM {
            get {
                return this.fORMField;
            }
            set {
                this.fORMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FORMSpecified {
            get {
                return this.fORMFieldSpecified;
            }
            set {
                this.fORMFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public interrogativeType INTERROGATIVE_TYPE {
            get {
                return this.iNTERROGATIVE_TYPEField;
            }
            set {
                this.iNTERROGATIVE_TYPEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool INTERROGATIVE_TYPESpecified {
            get {
                return this.iNTERROGATIVE_TYPEFieldSpecified;
            }
            set {
                this.iNTERROGATIVE_TYPEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MODAL {
            get {
                return this.mODALField;
            }
            set {
                this.mODALField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool NEGATED {
            get {
                return this.nEGATEDField;
            }
            set {
                this.nEGATEDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NEGATEDSpecified {
            get {
                return this.nEGATEDFieldSpecified;
            }
            set {
                this.nEGATEDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PASSIVE {
            get {
                return this.pASSIVEField;
            }
            set {
                this.pASSIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PASSIVESpecified {
            get {
                return this.pASSIVEFieldSpecified;
            }
            set {
                this.pASSIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PERFECT {
            get {
                return this.pERFECTField;
            }
            set {
                this.pERFECTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PERFECTSpecified {
            get {
                return this.pERFECTFieldSpecified;
            }
            set {
                this.pERFECTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public person PERSON {
            get {
                return this.pERSONField;
            }
            set {
                this.pERSONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PERSONSpecified {
            get {
                return this.pERSONFieldSpecified;
            }
            set {
                this.pERSONFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PROGRESSIVE {
            get {
                return this.pROGRESSIVEField;
            }
            set {
                this.pROGRESSIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PROGRESSIVESpecified {
            get {
                return this.pROGRESSIVEFieldSpecified;
            }
            set {
                this.pROGRESSIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SUPPRESS_GENITIVE_IN_GERUND {
            get {
                return this.sUPPRESS_GENITIVE_IN_GERUNDField;
            }
            set {
                this.sUPPRESS_GENITIVE_IN_GERUNDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SUPPRESS_GENITIVE_IN_GERUNDSpecified {
            get {
                return this.sUPPRESS_GENITIVE_IN_GERUNDFieldSpecified;
            }
            set {
                this.sUPPRESS_GENITIVE_IN_GERUNDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SUPRESSED_COMPLEMENTISER {
            get {
                return this.sUPRESSED_COMPLEMENTISERField;
            }
            set {
                this.sUPRESSED_COMPLEMENTISERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SUPRESSED_COMPLEMENTISERSpecified {
            get {
                return this.sUPRESSED_COMPLEMENTISERFieldSpecified;
            }
            set {
                this.sUPRESSED_COMPLEMENTISERFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public tense TENSE {
            get {
                return this.tENSEField;
            }
            set {
                this.tENSEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TENSESpecified {
            get {
                return this.tENSEFieldSpecified;
            }
            set {
                this.tENSEFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum clauseStatus {
        
        /// <remarks/>
        MATRIX,
        
        /// <remarks/>
        SUBORDINATE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum interrogativeType {
        
        /// <remarks/>
        HOW,
        
        /// <remarks/>
        WHAT_OBJECT,
        
        /// <remarks/>
        WHAT_SUBJECT,
        
        /// <remarks/>
        WHERE,
        
        /// <remarks/>
        WHO_INDIRECT_OBJECT,
        
        /// <remarks/>
        WHO_OBJECT,
        
        /// <remarks/>
        WHO_SUBJECT,
        
        /// <remarks/>
        WHY,
        
        /// <remarks/>
        YES_NO,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public partial class CoordinatedPhraseElement : NLGElement {
        
        private NLGElement[] coordField;
        
        private string conjField;
        
        private phraseCategory catField;
        
        private bool catFieldSpecified;
        
        private bool aPPOSITIVEField;
        
        private bool aPPOSITIVEFieldSpecified;
        
        private string cONJUNCTION_TYPEField;
        
        private string mODALField;
        
        private bool nEGATEDField;
        
        private bool nEGATEDFieldSpecified;
        
        private numberAgreement nUMBERField;
        
        private bool nUMBERFieldSpecified;
        
        private person pERSONField;
        
        private bool pERSONFieldSpecified;
        
        private bool pOSSESSIVEField;
        
        private bool pOSSESSIVEFieldSpecified;
        
        private bool pROGRESSIVEField;
        
        private bool pROGRESSIVEFieldSpecified;
        
        private bool rAISE_SPECIFIERField;
        
        private bool rAISE_SPECIFIERFieldSpecified;
        
        private bool sUPRESSED_COMPLEMENTISERField;
        
        private bool sUPRESSED_COMPLEMENTISERFieldSpecified;
        
        private tense tENSEField;
        
        private bool tENSEFieldSpecified;
        
        public CoordinatedPhraseElement() {
            this.conjField = "and";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coord")]
        public NLGElement[] coord {
            get {
                return this.coordField;
            }
            set {
                this.coordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("and")]
        public string conj {
            get {
                return this.conjField;
            }
            set {
                this.conjField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public phraseCategory cat {
            get {
                return this.catField;
            }
            set {
                this.catField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool catSpecified {
            get {
                return this.catFieldSpecified;
            }
            set {
                this.catFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool APPOSITIVE {
            get {
                return this.aPPOSITIVEField;
            }
            set {
                this.aPPOSITIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool APPOSITIVESpecified {
            get {
                return this.aPPOSITIVEFieldSpecified;
            }
            set {
                this.aPPOSITIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CONJUNCTION_TYPE {
            get {
                return this.cONJUNCTION_TYPEField;
            }
            set {
                this.cONJUNCTION_TYPEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MODAL {
            get {
                return this.mODALField;
            }
            set {
                this.mODALField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool NEGATED {
            get {
                return this.nEGATEDField;
            }
            set {
                this.nEGATEDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NEGATEDSpecified {
            get {
                return this.nEGATEDFieldSpecified;
            }
            set {
                this.nEGATEDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public numberAgreement NUMBER {
            get {
                return this.nUMBERField;
            }
            set {
                this.nUMBERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NUMBERSpecified {
            get {
                return this.nUMBERFieldSpecified;
            }
            set {
                this.nUMBERFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public person PERSON {
            get {
                return this.pERSONField;
            }
            set {
                this.pERSONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PERSONSpecified {
            get {
                return this.pERSONFieldSpecified;
            }
            set {
                this.pERSONFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool POSSESSIVE {
            get {
                return this.pOSSESSIVEField;
            }
            set {
                this.pOSSESSIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool POSSESSIVESpecified {
            get {
                return this.pOSSESSIVEFieldSpecified;
            }
            set {
                this.pOSSESSIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PROGRESSIVE {
            get {
                return this.pROGRESSIVEField;
            }
            set {
                this.pROGRESSIVEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PROGRESSIVESpecified {
            get {
                return this.pROGRESSIVEFieldSpecified;
            }
            set {
                this.pROGRESSIVEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool RAISE_SPECIFIER {
            get {
                return this.rAISE_SPECIFIERField;
            }
            set {
                this.rAISE_SPECIFIERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RAISE_SPECIFIERSpecified {
            get {
                return this.rAISE_SPECIFIERFieldSpecified;
            }
            set {
                this.rAISE_SPECIFIERFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SUPRESSED_COMPLEMENTISER {
            get {
                return this.sUPRESSED_COMPLEMENTISERField;
            }
            set {
                this.sUPRESSED_COMPLEMENTISERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SUPRESSED_COMPLEMENTISERSpecified {
            get {
                return this.sUPRESSED_COMPLEMENTISERFieldSpecified;
            }
            set {
                this.sUPRESSED_COMPLEMENTISERFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public tense TENSE {
            get {
                return this.tENSEField;
            }
            set {
                this.tENSEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TENSESpecified {
            get {
                return this.tENSEFieldSpecified;
            }
            set {
                this.tENSEFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://github.com/simplenlg/simplenlg/tree/master/src/main/resources/xml")]
    public enum documentCategory {
        
        /// <remarks/>
        DOCUMENT,
        
        /// <remarks/>
        SECTION,
        
        /// <remarks/>
        PARAGRAPH,
        
        /// <remarks/>
        SENTENCE,
        
        /// <remarks/>
        LIST,
        
        /// <remarks/>
        LIST_ITEM,
    }
}
